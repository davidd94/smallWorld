(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~dynamicprivacy~privacy"],{

/***/ "./node_modules/react-switch/dist/react-switch.dev.js":
/*!************************************************************!*\
  !*** ./node_modules/react-switch/dist/react-switch.dev.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, '__esModule', { value: true });\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar PropTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 instructure-react\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar uncheckedIcon = React.createElement('svg', {\n  viewBox: \"-2 -5 14 20\",\n  height: \"100%\",\n  width: \"100%\",\n  style: {\n    position: \"absolute\",\n    top: 0\n  }\n}, React.createElement('path', {\n  d: \"M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12\",\n  fill: \"#fff\",\n  fillRule: \"evenodd\"\n}));\nvar checkedIcon = React.createElement('svg', {\n  height: \"100%\",\n  width: \"100%\",\n  viewBox: \"-2 -5 17 21\",\n  style: {\n    position: \"absolute\",\n    top: 0\n  }\n}, React.createElement('path', {\n  d: \"M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0\",\n  fill: \"#fff\",\n  fillRule: \"evenodd\"\n}));\n\nfunction createBackgroundColor(pos, checkedPos, uncheckedPos, offColor, onColor) {\n  var relativePos = (pos - uncheckedPos) / (checkedPos - uncheckedPos);\n\n  if (relativePos === 0) {\n    return offColor;\n  }\n\n  if (relativePos === 1) {\n    return onColor;\n  }\n\n  var newColor = \"#\";\n\n  for (var i = 1; i < 6; i += 2) {\n    var offComponent = parseInt(offColor.substr(i, 2), 16);\n    var onComponent = parseInt(onColor.substr(i, 2), 16);\n    var weightedValue = Math.round((1 - relativePos) * offComponent + relativePos * onComponent);\n    var newComponent = weightedValue.toString(16);\n\n    if (newComponent.length === 1) {\n      newComponent = \"0\" + newComponent;\n    }\n\n    newColor += newComponent;\n  }\n\n  return newColor;\n}\n\nfunction convertShorthandColor(color) {\n  if (color.length === 7) {\n    return color;\n  }\n\n  var sixDigitColor = \"#\";\n\n  for (var i = 1; i < 4; i += 1) {\n    sixDigitColor += color[i] + color[i];\n  }\n\n  return sixDigitColor;\n}\n\nfunction getBackgroundColor(pos, checkedPos, uncheckedPos, offColor, onColor) {\n  var sixDigitOffColor = convertShorthandColor(offColor);\n  var sixDigitOnColor = convertShorthandColor(onColor);\n  return createBackgroundColor(pos, checkedPos, uncheckedPos, sixDigitOffColor, sixDigitOnColor);\n}\n\n// Make sure color props are strings that start with \"#\" since other ways to write colors are not supported.\nvar hexColorPropType = function (props, propName, componentName) {\n  var prop = props[propName];\n\n  if (typeof prop !== \"string\" || prop[0] !== \"#\" || prop.length !== 4 && prop.length !== 7) {\n    return new Error(\"Invalid prop '\" + propName + \"' supplied to '\" + componentName + \"'. '\" + propName + \"' has to be either a 3-digit or 6-digit hex-color string. Valid examples: '#abc', '#123456'\");\n  }\n\n  return null;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar ReactSwitch =\n/*@__PURE__*/\nfunction (Component) {\n  function ReactSwitch(props) {\n    Component.call(this, props);\n    var height = props.height;\n    var width = props.width;\n    var handleDiameter = props.handleDiameter;\n    var checked = props.checked;\n    this.$handleDiameter = handleDiameter || height - 2;\n    this.$checkedPos = Math.max(width - height, width - (height + this.$handleDiameter) / 2);\n    this.$uncheckedPos = Math.max(0, (height - this.$handleDiameter) / 2);\n    this.state = {\n      $pos: checked ? this.$checkedPos : this.$uncheckedPos\n    };\n    this.$lastDragAt = 0;\n    this.$lastKeyUpAt = 0;\n    this.$onMouseDown = this.$onMouseDown.bind(this);\n    this.$onMouseMove = this.$onMouseMove.bind(this);\n    this.$onMouseUp = this.$onMouseUp.bind(this);\n    this.$onTouchStart = this.$onTouchStart.bind(this);\n    this.$onTouchMove = this.$onTouchMove.bind(this);\n    this.$onTouchEnd = this.$onTouchEnd.bind(this);\n    this.$onClick = this.$onClick.bind(this);\n    this.$onInputChange = this.$onInputChange.bind(this);\n    this.$onKeyUp = this.$onKeyUp.bind(this);\n    this.$setHasOutline = this.$setHasOutline.bind(this);\n    this.$unsetHasOutline = this.$unsetHasOutline.bind(this);\n    this.$getInputRef = this.$getInputRef.bind(this);\n  }\n\n  if (Component) ReactSwitch.__proto__ = Component;\n  ReactSwitch.prototype = Object.create(Component && Component.prototype);\n  ReactSwitch.prototype.constructor = ReactSwitch;\n\n  ReactSwitch.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.checked === this.props.checked) {\n      return;\n    }\n\n    var $pos = this.props.checked ? this.$checkedPos : this.$uncheckedPos;\n    this.setState({\n      $pos: $pos\n    });\n  };\n\n  ReactSwitch.prototype.$onDragStart = function $onDragStart(clientX) {\n    this.$inputRef.focus();\n    this.setState({\n      $startX: clientX,\n      $hasOutline: true,\n      $dragStartingTime: Date.now()\n    });\n  };\n\n  ReactSwitch.prototype.$onDrag = function $onDrag(clientX) {\n    var ref = this.state;\n    var $startX = ref.$startX;\n    var $isDragging = ref.$isDragging;\n    var $pos = ref.$pos;\n    var ref$1 = this.props;\n    var checked = ref$1.checked;\n    var startPos = checked ? this.$checkedPos : this.$uncheckedPos;\n    var mousePos = startPos + clientX - $startX; // We need this check to fix a windows glitch where onDrag is triggered onMouseDown in some cases\n\n    if (!$isDragging && clientX !== $startX) {\n      this.setState({\n        $isDragging: true\n      });\n    }\n\n    var newPos = Math.min(this.$checkedPos, Math.max(this.$uncheckedPos, mousePos)); // Prevent unnecessary rerenders\n\n    if (newPos !== $pos) {\n      this.setState({\n        $pos: newPos\n      });\n    }\n  };\n\n  ReactSwitch.prototype.$onDragStop = function $onDragStop(event) {\n    var ref = this.state;\n    var $pos = ref.$pos;\n    var $isDragging = ref.$isDragging;\n    var $dragStartingTime = ref.$dragStartingTime;\n    var ref$1 = this.props;\n    var checked = ref$1.checked;\n    var halfwayCheckpoint = (this.$checkedPos + this.$uncheckedPos) / 2; // Simulate clicking the handle\n\n    var timeSinceStart = Date.now() - $dragStartingTime;\n\n    if (!$isDragging || timeSinceStart < 250) {\n      this.$onChange(event); // Handle dragging from checked position\n    } else if (checked) {\n      if ($pos > halfwayCheckpoint) {\n        this.setState({\n          $pos: this.$checkedPos\n        });\n      } else {\n        this.$onChange(event);\n      } // Handle dragging from unchecked position\n\n    } else if ($pos < halfwayCheckpoint) {\n      this.setState({\n        $pos: this.$uncheckedPos\n      });\n    } else {\n      this.$onChange(event);\n    }\n\n    this.setState({\n      $isDragging: false,\n      $hasOutline: false\n    });\n    this.$lastDragAt = Date.now();\n  };\n\n  ReactSwitch.prototype.$onMouseDown = function $onMouseDown(event) {\n    event.preventDefault(); // Ignore right click and scroll\n\n    if (typeof event.button === \"number\" && event.button !== 0) {\n      return;\n    }\n\n    this.$onDragStart(event.clientX);\n    window.addEventListener(\"mousemove\", this.$onMouseMove);\n    window.addEventListener(\"mouseup\", this.$onMouseUp);\n  };\n\n  ReactSwitch.prototype.$onMouseMove = function $onMouseMove(event) {\n    event.preventDefault();\n    this.$onDrag(event.clientX);\n  };\n\n  ReactSwitch.prototype.$onMouseUp = function $onMouseUp(event) {\n    this.$onDragStop(event);\n    window.removeEventListener(\"mousemove\", this.$onMouseMove);\n    window.removeEventListener(\"mouseup\", this.$onMouseUp);\n  };\n\n  ReactSwitch.prototype.$onTouchStart = function $onTouchStart(event) {\n    this.$checkedStateFromDragging = null;\n    this.$onDragStart(event.touches[0].clientX);\n  };\n\n  ReactSwitch.prototype.$onTouchMove = function $onTouchMove(event) {\n    this.$onDrag(event.touches[0].clientX);\n  };\n\n  ReactSwitch.prototype.$onTouchEnd = function $onTouchEnd(event) {\n    event.preventDefault();\n    this.$onDragStop(event);\n  };\n\n  ReactSwitch.prototype.$onInputChange = function $onInputChange(event) {\n    // This condition is unfortunately needed in some browsers where the input's change event might get triggered\n    // right after the dragstop event is triggered (occurs when dropping over a label element)\n    if (Date.now() - this.$lastDragAt > 50) {\n      this.$onChange(event); // Prevent clicking label, but not key activation from setting outline to true - yes, this is absurd\n\n      if (Date.now() - this.$lastKeyUpAt > 50) {\n        this.setState({\n          $hasOutline: false\n        });\n      }\n    }\n  };\n\n  ReactSwitch.prototype.$onKeyUp = function $onKeyUp() {\n    this.$lastKeyUpAt = Date.now();\n  };\n\n  ReactSwitch.prototype.$setHasOutline = function $setHasOutline() {\n    this.setState({\n      $hasOutline: true\n    });\n  };\n\n  ReactSwitch.prototype.$unsetHasOutline = function $unsetHasOutline() {\n    this.setState({\n      $hasOutline: false\n    });\n  };\n\n  ReactSwitch.prototype.$getInputRef = function $getInputRef(el) {\n    this.$inputRef = el;\n  };\n\n  ReactSwitch.prototype.$onClick = function $onClick(event) {\n    event.preventDefault();\n    this.$inputRef.focus();\n    this.$onChange(event);\n    this.setState({\n      $hasOutline: false\n    });\n  };\n\n  ReactSwitch.prototype.$onChange = function $onChange(event) {\n    var ref = this.props;\n    var checked = ref.checked;\n    var onChange = ref.onChange;\n    var id = ref.id;\n    onChange(!checked, event, id);\n  };\n\n  ReactSwitch.prototype.render = function render() {\n    var ref = this.props;\n    var disabled = ref.disabled;\n    var className = ref.className;\n    var offColor = ref.offColor;\n    var onColor = ref.onColor;\n    var offHandleColor = ref.offHandleColor;\n    var onHandleColor = ref.onHandleColor;\n    var checkedIcon$$1 = ref.checkedIcon;\n    var uncheckedIcon$$1 = ref.uncheckedIcon;\n    var boxShadow = ref.boxShadow;\n    var activeBoxShadow = ref.activeBoxShadow;\n    var height = ref.height;\n    var width = ref.width;\n    var handleDiameter = ref.handleDiameter;\n    var rest$1 = objectWithoutProperties(ref, [\"disabled\", \"className\", \"offColor\", \"onColor\", \"offHandleColor\", \"onHandleColor\", \"checkedIcon\", \"uncheckedIcon\", \"boxShadow\", \"activeBoxShadow\", \"height\", \"width\", \"handleDiameter\"]);\n    var rest = rest$1;\n    var ref$1 = this.state;\n    var $pos = ref$1.$pos;\n    var $isDragging = ref$1.$isDragging;\n    var $hasOutline = ref$1.$hasOutline;\n    var rootStyle = {\n      position: \"relative\",\n      display: \"inline-block\",\n      textAlign: \"left\",\n      opacity: disabled ? 0.5 : 1,\n      direction: \"ltr\",\n      borderRadius: height / 2,\n      WebkitTransition: \"opacity 0.25s\",\n      MozTransition: \"opacity 0.25s\",\n      transition: \"opacity 0.25s\",\n      touchAction: \"none\",\n      WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      userSelect: \"none\"\n    };\n    var backgroundStyle = {\n      height: height,\n      width: width,\n      margin: Math.max(0, (this.$handleDiameter - height) / 2),\n      position: \"relative\",\n      background: getBackgroundColor($pos, this.$checkedPos, this.$uncheckedPos, offColor, onColor),\n      borderRadius: height / 2,\n      cursor: disabled ? \"default\" : \"pointer\",\n      WebkitTransition: $isDragging ? null : \"background 0.25s\",\n      MozTransition: $isDragging ? null : \"background 0.25s\",\n      transition: $isDragging ? null : \"background 0.25s\"\n    };\n    var checkedIconStyle = {\n      height: height,\n      width: Math.min(height * 1.5, width - (this.$handleDiameter + height) / 2 + 1),\n      position: \"relative\",\n      opacity: ($pos - this.$uncheckedPos) / (this.$checkedPos - this.$uncheckedPos),\n      pointerEvents: \"none\",\n      WebkitTransition: $isDragging ? null : \"opacity 0.25s\",\n      MozTransition: $isDragging ? null : \"opacity 0.25s\",\n      transition: $isDragging ? null : \"opacity 0.25s\"\n    };\n    var uncheckedIconStyle = {\n      height: height,\n      width: Math.min(height * 1.5, width - (this.$handleDiameter + height) / 2 + 1),\n      position: \"absolute\",\n      opacity: 1 - ($pos - this.$uncheckedPos) / (this.$checkedPos - this.$uncheckedPos),\n      right: 0,\n      top: 0,\n      pointerEvents: \"none\",\n      WebkitTransition: $isDragging ? null : \"opacity 0.25s\",\n      MozTransition: $isDragging ? null : \"opacity 0.25s\",\n      transition: $isDragging ? null : \"opacity 0.25s\"\n    };\n    var handleStyle = {\n      height: this.$handleDiameter,\n      width: this.$handleDiameter,\n      background: getBackgroundColor($pos, this.$checkedPos, this.$uncheckedPos, offHandleColor, onHandleColor),\n      display: \"inline-block\",\n      cursor: disabled ? \"default\" : \"pointer\",\n      borderRadius: \"50%\",\n      position: \"absolute\",\n      transform: \"translateX(\" + $pos + \"px)\",\n      top: Math.max(0, (height - this.$handleDiameter) / 2),\n      outline: 0,\n      boxShadow: $hasOutline ? activeBoxShadow : boxShadow,\n      border: 0,\n      WebkitTransition: $isDragging ? null : \"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",\n      MozTransition: $isDragging ? null : \"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",\n      transition: $isDragging ? null : \"background-color 0.25s, transform 0.25s, box-shadow 0.15s\"\n    };\n    var inputStyle = {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      width: 1\n    };\n    return React.createElement('div', {\n      className: className,\n      style: rootStyle\n    }, React.createElement('div', {\n      className: \"react-switch-bg\",\n      style: backgroundStyle,\n      onClick: disabled ? null : this.$onClick,\n      onMouseDown: function (e) {\n        return e.preventDefault();\n      }\n    }, checkedIcon$$1 && React.createElement('div', {\n      style: checkedIconStyle\n    }, checkedIcon$$1), uncheckedIcon$$1 && React.createElement('div', {\n      style: uncheckedIconStyle\n    }, uncheckedIcon$$1)), React.createElement('div', {\n      className: \"react-switch-handle\",\n      style: handleStyle,\n      onClick: function (e) {\n        return e.preventDefault();\n      },\n      onMouseDown: disabled ? null : this.$onMouseDown,\n      onTouchStart: disabled ? null : this.$onTouchStart,\n      onTouchMove: disabled ? null : this.$onTouchMove,\n      onTouchEnd: disabled ? null : this.$onTouchEnd,\n      onTouchCancel: disabled ? null : this.$unsetHasOutline\n    }), React.createElement('input', _extends({}, {\n      type: \"checkbox\",\n      role: \"switch\",\n      disabled: disabled,\n      style: inputStyle\n    }, rest, {\n      ref: this.$getInputRef,\n      onFocus: this.$setHasOutline,\n      onBlur: this.$unsetHasOutline,\n      onKeyUp: this.$onKeyUp,\n      onChange: this.$onInputChange\n    })));\n  };\n\n  return ReactSwitch;\n}(React.Component);\n\nReactSwitch.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  offColor: hexColorPropType,\n  onColor: hexColorPropType,\n  offHandleColor: hexColorPropType,\n  onHandleColor: hexColorPropType,\n  handleDiameter: PropTypes.number,\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  checkedIcon: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  boxShadow: PropTypes.string,\n  activeBoxShadow: PropTypes.string,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  id: PropTypes.string,\n  className: PropTypes.string\n};\nReactSwitch.defaultProps = {\n  disabled: false,\n  offColor: \"#888\",\n  onColor: \"#080\",\n  offHandleColor: \"#fff\",\n  onHandleColor: \"#fff\",\n  uncheckedIcon: uncheckedIcon,\n  checkedIcon: checkedIcon,\n  boxShadow: null,\n  activeBoxShadow: \"0 0 2px 3px #3bf\",\n  height: 28,\n  width: 56\n};\n\nexports.default = ReactSwitch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-switch/dist/react-switch.dev.js\n");

/***/ }),

/***/ "./node_modules/react-switch/index.js":
/*!********************************************!*\
  !*** ./node_modules/react-switch/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("if (false) {} else {\n  module.exports = __webpack_require__(/*! ./dist/react-switch.dev.js */ \"./node_modules/react-switch/dist/react-switch.dev.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3dpdGNoL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXN3aXRjaC9pbmRleC5qcz9hMjEwIl0sInNvdXJjZXNDb250ZW50IjpbImlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9kaXN0L3JlYWN0LXN3aXRjaC5taW4uanNcIik7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL2Rpc3QvcmVhY3Qtc3dpdGNoLmRldi5qc1wiKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-switch/index.js\n");

/***/ })

}]);